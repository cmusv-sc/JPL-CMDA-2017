<?xml version='1.0' encoding='UTF-8'?>
<configure>

<dataset_name>
ecmwf_yotc_oper_an_ml_ncar_0
</dataset_name>

<data_root_dir>
/data3/ecmwf/yotc_oper_an_ml
</data_root_dir>

<list_dir>
<!-- directory contining granules lists (no final slash) -->
<!--/home/gblock/atrain/output/ecmwf_yotc_oper_an_ml_ncar -->
/home/seungwon
</list_dir>

<output_dir>
<!--/home/gblock/atrain/output/ecmwf_yotc_oper_an_pl_ncar-->
/data2/collocation/yotc_oper_an_ml
</output_dir>

<log_file>
<!--/home/gblock/atrain/output/ecmwf_yotc_oper_an_pl_ncar/err_0.log-->
</log_file>

<start_time>
<!--01/06/2008 10:00:00-->
06/21/2008 00:00:00
</start_time>

<end_time>
<!--01/06/2008 10:30:00-->
01/01/2009 00:00:00
</end_time>

<time_diff>
0
</time_diff>

<time_search_range>
<!-- Within this time range, co-location searches for the nearest
     neighbor in the source data (lat, lon) grid for a given (lat, lon)
     spot in the target data grid. -->
10850
<!-- Make it slightly larger than a half of ecmwf time step, which is 3 hrs, to cover at least one time step -->
</time_search_range>

<footprint_size>
<!-- footprint size of the data in km -->
20
</footprint_size>

<space_search_factor>
<!-- inflate footprint size by this fator in search -->
1.5
</space_search_factor>

<invalid_data>
<!-- when no nearest neighbor found within footprint, use this value -->
-909090
</invalid_data>

<num_cores>
<!-- number of cores you would like to use -->
1
</num_cores>

<proc_size>
<!-- number of target granules a process would handle -->
4
</proc_size>

<cell_search_limit>
<!-- When qry_range is large compared to the grid overlaid
     on target points, only search in C by C cells around
     each query point -->
2
</cell_search_limit>

</configure>
